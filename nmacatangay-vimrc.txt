""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Noel's vimrc :)
"

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Vim - https://github.com/vim/vim
"
" Install or update Vim
"  git clone https://github.com/vim/vim.git
"   or git pull if you already have this
"  cd vim/src
"  make
"   If this doesn't work, you may need to run this command:
"    Ubuntu 16.04: sudo apt-get install ncurses-dev
"    Ubuntu 16.10: sudo apt-get install libtinfo-dev
"  sudo make install
"  Reconnect to shell
"  :version (inside vim) to check current vim version
"

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Vundle - https://github.com/VundleVim/Vundle.vim
"
" Install Vundle
"  git config --global core.autocrlf input
"  git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
"  :PluginInstall (inside vim)
"
" Install New Plugins
"  Add new plugin
"  Restart vim
"  :PluginInstall (inside vim)
"

" Required
set nocompatible
filetype off

" Initialize Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Required
Plugin 'VundleVim/Vundle.vim'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Development Tools
"

Plugin 'mileszs/ack.vim'                  " search tool
Plugin 'tpope/vim-fugitive'               " git wrapper
Plugin 'airblade/vim-gitgutter'           " display git diff while editing
Plugin 'scrooloose/nerdtree'              " file explorer
Plugin 'jistr/vim-nerdtree-tabs'          " nerdtree improved

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Visual
"

Plugin 'altercation/vim-colors-solarized' " fancy colors :)
Plugin 'vim-airline/vim-airline'          " fancy menu
Plugin 'vim-airline/vim-airline-themes'   " vim-airline themes
Plugin 'nathanaelkane/vim-indent-guides'  " indention guide
Plugin 'bronson/vim-trailing-whitespace'  " highlights trailing whitespace in red

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Syntax
"

Plugin 'dense-analysis/ale'               " syntax linting
Plugin 'kchmck/vim-coffee-script'         " coffee syntax highlight
Plugin 'pangloss/vim-javascript'          " jsx syntax highlight
Plugin 'mxw/vim-jsx'                      " jsx syntax highlight

" Required
call vundle#end()
filetype plugin indent on


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Plugin - vim-nerdtree-tabs
"

" Auto Open Nerd Tree Tabs
let g:nerdtree_tabs_open_on_console_startup = 1

" Show hidden files
let NERDTreeShowHidden = 1

" Ignore the following files
let NERDTreeIgnore = ['node_modules', 'tmp, ''\.git$', '\.pyc', '\.sw[a-p]$']


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Plugin - ack.vim
"

" Use ag instead of ack (sudo apt-get install silversearcher-ag -y)
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Plugin - vim-colors-solarized
"
" Add this to your PuTTY Settings for the full Solarized experience
" mRemoteNG -> Tools -> Options -> Advanced -> Launch PuTTY
" PuTTY Configuration -> Window -> Colours
"
" If using mRemoteNG, make sure to save these settings as a session and use
" that session when connecting to a machine
"
" WARNING: Blue Bold will be gray meaning files and directories are the same
"          color when executing <ls -la> or <ll>
"
"          Colour             RGB Value
"  Default Foreground:      131, 148, 150
"  Default Bold Foreground: 147, 161, 161
"  Default Background:      0,   43   54
"  Default Bold Background: 7,   54,  66
"  Cursor Text:             0,   43,  54
"  Cursor Colour:           131, 148, 150
"  ANSI Black:              7,   54,  66
"  ANSI Black Bold:         0,   43,  54
"  ANSI Red:                220, 50,  47
"  ANSI Red Bold:           203, 75,  22
"  ANSI Green:              133, 153, 0
"  ANSI Green Bold:         88,  110, 117
"  ANSI Yellow:             181, 137, 0
"  ANSI Yellow Bold:        101, 123, 131
"  ANSI Blue:               38,  139, 210
"  ANSI Blue Bold:          131, 148, 150
"  ANSI Magenta:            211, 54,  130
"  ANSI Magenta Bold:       108, 113, 196
"  ANSI Cyan:               42,  161, 152
"  ANSI Cyan Bold:          147, 161, 161
"  ANSI White:              238, 232, 213
"  ANSI White Bold:         253, 246, 227
"

" Use cterm
let g:solarized_termcolors = 16


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Plugin - vim-gitgutter
"

" Auto suppress gitgutter when there are too many signs
let g:gitgutter_max_signs = 1000  " 500 default value

" Show diff markers quickly
set updatetime=100


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Plugin - vim-airline
"

" Integrate with ale
let g:airline#extensions#ale#enabled = 1

" Default Theme (:AirlineTheme <TAB> to show other themes)
let g:airline_theme = 'minimalist'

" Prerequisite (sudo apt-get install powerline)
" let g:airline_powerline_fonts = 1


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Plugin - vim-indent-guides
"

" Auto Start Indent Guide
let g:indent_guides_enable_on_vim_startup = 1

" Other Options
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1
let g:indent_guides_exclude_filetypes = ['help', 'nerdtree', 'vim']
let g:indent_guides_auto_colors = 0


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Plugin - ale
"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Javascript
"  ESLint
"  npm install eslint --save-dev
"  yarn install eslint --dev
"
" Python
"  pycodestyle (formerly pep8)
"  pip install pycodestyle
"  pip install --upgrade pycodestyle
"
" Ruby
"  RuboCop
"  gem install rubocop
"  gem update rubocop

" Start Ale automatically
let g:ale_lint_on_enter = 1

" Start Ale only on specified files
let g:ale_linters_explicit = 1

" Auto-start sign gutters
let g:ale_sign_column_always = 1

" Fix files on save
let g:ale_fix_on_save = 1

" Change default signs
let g:ale_sign_error =   '>>' " Default: >>
let g:ale_sign_warning = '--' " Default: --

" Setup linters and fixers
let g:ale_linters = {
\   'javascript': ['eslint'],
\   'python': ['pycodestyle'],
\   'ruby': ['rubocop']
\}
let g:ale_fixers = {
\   'javascript': ['eslint'],
\   'python': ['pycodestyle'],
\   'ruby': ['rubocop']
\}


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Map Commands
"

" <Ctrl+a> Toggle NTT on all tabs
nnoremap <C-a> :NERDTreeTabsToggle<CR>
inoremap <C-a> <Esc>:NERDTreeTabsToggle<CR>

" <CTRL+t> New tab
nnoremap <C-t> :tabnew<CR><C-w><Left>
inoremap <C-t> <Esc>:tabnew<CR><C-w><Left>

" <CTRL+h> Move to the tab on the left
nnoremap <C-h> :tabprevious<CR>
inoremap <C-h> <Esc>:tabprevious<CR>

" <CTRL+l> Move to the tab on the right
nnoremap <C-l> :tabnext<CR>
inoremap <C-l> <Esc>:tabnext<CR>

" <SHFT+h or H> Move cursor to split windows (Left)
" This replaces the shortcut key for move to the top of current display
nnoremap H <C-w>h

" <SHFT+j or J> Move cursor to split windows (Below)
" This replaces the shortcut key for merging the current on below line
nnoremap J <C-w>j

" <SHFT+k or K> Move cursor to split windows (Above)
" This replaces the shortcut key for opening the manual for the highlighted
" command
nnoremap K <C-w>k

" <SHFT+l or L> Move cursor to split windows (Right)
" This replaces the shortcut key for move to the bottom of current display
nnoremap L <C-w>l

" \tm0 Move current tab to first position
nnoremap <Leader>tm0 :tabmove 0<CR>

" \gs Git status
nnoremap <Leader>gs :Gstatus<CR>

" \gc Git commit
nnoremap <Leader>gc :Gcommit<CR>

" \gd Git diff
nnoremap <Leader>gd :Gdiff<CR>

" \gb Git blame
nnoremap <Leader>gb :Gblame<CR>

" \go Git checkout
nnoremap <Leader>go :Git checkout<Space>

" \gl Git pull
nnoremap <Leader>gl :Git pull origin<Space>

" \gp Git push
nnoremap <Leader>gp :Git push origin<Space>

" \ig Toggle Indent Guides
nnoremap <Leader>ig :IndentGuidesToggle<CR>

" \gg Toggle Git Gutter
nnoremap <Leader>gg :GitGutterToggle<CR>

" \ln Toggle Git Gutter
nnoremap <Leader>ln :ALEToggle<CR>

" Ack will use Ack! instead (Ack! will not jump to first result automatically)
cnoreabbrev Ack Ack!

" \a Ack! search
nnoremap <Leader>a :Ack!<Space>

" FORCE hjkl :)
noremap <Up>    <Nop>
noremap <Down>  <Nop>
noremap <Left>  <Nop>
noremap <Right> <Nop>

" \pretty Pretty Print JSON Data
" Requirements:
"   Use double quotes " " instead of single quotes ' ' to wrap key value pairs
"   Accepted boolean values (ex. true or false)
"   Accepted null values (ex. Null or null)
nnoremap <Leader>pretty :%!python -m json.tool<CR>zR

" <Space> Page Down
nnoremap <Space> <C-d>

" Use jk instead of ESC
inoremap jk <Esc>
inoremap JK <Esc>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Auto Commands
"

augroup four-space
  autocmd BufReadPost,BufNewFile,BufEnter *.py set shiftwidth=4
  autocmd BufReadPost,BufNewFile,BufEnter *.py set softtabstop=4
  autocmd BufReadPost,BufNewFile,BufEnter *.py set tabstop=4
  autocmd BufReadPost,BufNewFile,BufEnter *.py let g:indent_guides_guide_size = 2
augroup end

augroup two-space
  autocmd BufReadPost,BufNewFile,BufEnter *.js,*.jsx,*.proto,*.rb,*.ts,*.tsx set shiftwidth=2
  autocmd BufReadPost,BufNewFile,BufEnter *.js,*.jsx,*.proto,*.rb,*.ts,*.tsx set softtabstop=2
  autocmd BufReadPost,BufNewFile,BufEnter *.js,*.jsx,*.proto,*.rb,*.ts,*.tsx set tabstop=2
  autocmd BufReadPost,BufNewFile,BufEnter *.js,*.jsx,*.proto,*.rb,*.ts,*.tsx let g:indent_guides_guide_size = 1
augroup end

augroup typescript
  autocmd BufReadPost,BufNewFile,BufEnter *.ts,*.tsx set syntax=javascript
augroup end

" Setup colors for Indent Guide
autocmd VimEnter * :highlight IndentGuidesOdd  ctermbg=Black ctermfg=Green
autocmd VimEnter * :highlight IndentGuidesEven ctermbg=Black ctermfg=Green


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Quality of Life
"

" Enable syntax highlighting
syntax enable

" Backspace
set backspace=2       " Make backspace behave list most other programs

" Colorscheme (Dark Solarized)
set t_Co=256
set background=dark
colorscheme solarized

" Interface
set number            " Shows line numbers
set numberwidth=5     " Set line number width (default=4)
set ruler             " Shows line and character position (lower right) (hidden when vim-airline is active)
set showcmd           " Shows currently typed commands (lower right)
set wildmenu          " Shows completable commands when pressing <TAB>
                      "  i.e. :colorscheme <TAB>

" Beeps and Flashes
set noerrorbells      " Disable beeping sound
set novisualbell      " Disable flashing screen part1
set t_vb=             " Disable flashing screen part2

" Command Timeouts
set notimeout         " Disable command timeout part1
set ttimeout          " Disable command timeout part2

" Safety First!
set confirm           " Executing :q without saving will show a confirm prompt

" Search
set hlsearch          " Search results will be highlighted
set ignorecase        " Case insensitive search
set incsearch         " Go to next match while typing search
set smartcase         " Searching with uppercase letters will make search case sensitive

" Speed
set lazyredraw        " Buffer screen updates (helpful in complex recordings)

" Tabs
set expandtab         " Pressing tab will use spaces instead
set shiftwidth=2      " Indentation spaces when using << or >>
set softtabstop=2     " Always use the specified number of spaces
set tabstop=2         " The number of characters the tab character will use

" Split
set splitright        " Cursor will appear on right split when using vsplit
"set splitbelow       " Cursor will appear on bottom split when using split (commented out because I like \gs to be on top)

" Folding
set foldmethod=indent " Easiest foldmethod to work with
set foldlevelstart=1  " Start folding at X level
set foldnestmax=2     " Only fold X levels deep
"set nofoldenable     " Don't automatically fold (commented out to always enable folding at file open)

" Highlight column 81
let &colorcolumn=join(range(81, 81), ',')

" Cursor is always at the center
set scrolloff=999

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"
" Commands
"

" :W will force save a read-only file
command W w !sudo tee % > /dev/null

" Removes auto-indent when pasting (Removes the need to use ':set paste')
let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"
inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()
function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction

" End :)
